version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ahl-allah-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ahl_allah_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ahl-allah-server/scripts/setup-postgresql.sql:/docker-entrypoint-initdb.d/setup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Application
  app:
    build:
      context: ./ahl-allah-server
      dockerfile: Dockerfile
    container_name: ahl-allah-server
    restart: unless-stopped
    ports:
      - "60772:60772"
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ahl_allah_db
      DB_USER: postgres
      DB_PASSWORD: password
      
      # JWT Configuration
      JWT_SECRET: ByYM000OLlMQG6VVVp1OH7Xzyr7gHuw1qvUC5dcGt3SNM
      JWT_EXPIRES_IN: 7d
      JWT_ISSUER: http://localhost:60772
      JWT_AUDIENCE: http://localhost:4200
      
      # Email Configuration
      EMAIL_FROM: a99.bdr@gmail.com
      EMAIL_SMTP_SERVER: smtp.gmail.com
      EMAIL_PORT: 465
      EMAIL_USERNAME: a99.bdr@gmail.com
      EMAIL_PASSWORD: acxv mzkd ipin wmyn
      
      # Server Configuration
      PORT: 60772
      NODE_ENV: production
      SESSION_SECRET: your-session-secret-key
      
      # Frontend Configuration
      FRONTEND_URL: http://localhost:4200
      
      # File Upload
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 5242880
    volumes:
      - ./ahl-allah-server/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:60772/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ahl-allah-network

  # React Client Application
  client:
    build:
      context: ./ahl-allah-client
      dockerfile: Dockerfile
    container_name: ahl-allah-client
    restart: unless-stopped
    ports:
      - "4200:80"
    depends_on:
      app:
        condition: service_healthy
    networks:
      - ahl-allah-network

networks:
  ahl-allah-network:
    driver: bridge

volumes:
  postgres_data:

